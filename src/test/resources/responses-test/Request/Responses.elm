{-
  This file was generated by endpoints-elm 0.9.2 interpreter.
  Do not edit this file manually.

  See https://github.com/scalalandio/endpoints-elm for more information.
-}

module Request.Responses exposing (..)

import Request.Url.Responses
import Http
import HttpBuilder.Task exposing (RequestBuilder)
import Json.Decode as Decode
import Json.Encode as Encode
import Bool.Extra
import Maybe.Extra
import Bytes exposing (Bytes)
import Dict exposing (Dict)

import Data.Coproduct exposing (..)
import Data.Foo exposing (..)
import Date exposing (..)
import Uuid exposing (..)
import EndpointsElm


jsonstringGet : RequestBuilder Http.Error String
jsonstringGet  =
  HttpBuilder.Task.get (Request.Url.Responses.jsonstringGet )
    |> HttpBuilder.Task.withResolver (Http.stringResolver (EndpointsElm.httpResolveJson (Decode.string)))
    |> HttpBuilder.Task.withTimeout 30000


jsonintGet : RequestBuilder Http.Error Int
jsonintGet  =
  HttpBuilder.Task.get (Request.Url.Responses.jsonintGet )
    |> HttpBuilder.Task.withResolver (Http.stringResolver (EndpointsElm.httpResolveJson (Decode.int)))
    |> HttpBuilder.Task.withTimeout 30000


jsonlongGet : RequestBuilder Http.Error Int
jsonlongGet  =
  HttpBuilder.Task.get (Request.Url.Responses.jsonlongGet )
    |> HttpBuilder.Task.withResolver (Http.stringResolver (EndpointsElm.httpResolveJson (Decode.int)))
    |> HttpBuilder.Task.withTimeout 30000


jsonfloatGet : RequestBuilder Http.Error Float
jsonfloatGet  =
  HttpBuilder.Task.get (Request.Url.Responses.jsonfloatGet )
    |> HttpBuilder.Task.withResolver (Http.stringResolver (EndpointsElm.httpResolveJson (Decode.float)))
    |> HttpBuilder.Task.withTimeout 30000


jsondoubleGet : RequestBuilder Http.Error Float
jsondoubleGet  =
  HttpBuilder.Task.get (Request.Url.Responses.jsondoubleGet )
    |> HttpBuilder.Task.withResolver (Http.stringResolver (EndpointsElm.httpResolveJson (Decode.float)))
    |> HttpBuilder.Task.withTimeout 30000


jsonbooleanGet : RequestBuilder Http.Error Bool
jsonbooleanGet  =
  HttpBuilder.Task.get (Request.Url.Responses.jsonbooleanGet )
    |> HttpBuilder.Task.withResolver (Http.stringResolver (EndpointsElm.httpResolveJson (Decode.bool)))
    |> HttpBuilder.Task.withTimeout 30000


jsonuuidGet : RequestBuilder Http.Error Uuid
jsonuuidGet  =
  HttpBuilder.Task.get (Request.Url.Responses.jsonuuidGet )
    |> HttpBuilder.Task.withResolver (Http.stringResolver (EndpointsElm.httpResolveJson (Uuid.decoder)))
    |> HttpBuilder.Task.withTimeout 30000


jsondateGet : RequestBuilder Http.Error Date
jsondateGet  =
  HttpBuilder.Task.get (Request.Url.Responses.jsondateGet )
    |> HttpBuilder.Task.withResolver (Http.stringResolver (EndpointsElm.httpResolveJson ((Decode.string |> Decode.andThen (Date.fromIsoString >> Result.map Decode.succeed >> Result.withDefault (Decode.fail "can't parse the date!"))))))
    |> HttpBuilder.Task.withTimeout 30000


jsoncaseclassGet : RequestBuilder Http.Error Foo
jsoncaseclassGet  =
  HttpBuilder.Task.get (Request.Url.Responses.jsoncaseclassGet )
    |> HttpBuilder.Task.withResolver (Http.stringResolver (EndpointsElm.httpResolveJson (Data.Foo.decoder)))
    |> HttpBuilder.Task.withTimeout 30000


jsoncoproductGet : RequestBuilder Http.Error Coproduct
jsoncoproductGet  =
  HttpBuilder.Task.get (Request.Url.Responses.jsoncoproductGet )
    |> HttpBuilder.Task.withResolver (Http.stringResolver (EndpointsElm.httpResolveJson (Data.Coproduct.decoder)))
    |> HttpBuilder.Task.withTimeout 30000


jsonlistGet : RequestBuilder Http.Error (List String)
jsonlistGet  =
  HttpBuilder.Task.get (Request.Url.Responses.jsonlistGet )
    |> HttpBuilder.Task.withResolver (Http.stringResolver (EndpointsElm.httpResolveJson ((Decode.list Decode.string))))
    |> HttpBuilder.Task.withTimeout 30000


jsonmapGet : RequestBuilder Http.Error (Dict String Foo)
jsonmapGet  =
  HttpBuilder.Task.get (Request.Url.Responses.jsonmapGet )
    |> HttpBuilder.Task.withResolver (Http.stringResolver (EndpointsElm.httpResolveJson ((Decode.dict Data.Foo.decoder))))
    |> HttpBuilder.Task.withTimeout 30000

