{-
  This file was generated by endpoints-elm 0.9.2 interpreter.
  Do not edit this file manually.

  See https://github.com/scalalandio/endpoints-elm for more information.
-}

module Request.Responses exposing (..)

import Request.Url.Responses
import Http
import HttpBuilder exposing (RequestBuilder)
import Json.Decode as Decode
import Json.Encode as Encode
import Bool.Extra
import Maybe.Extra
import Dict exposing (Dict)

import Data.Coproduct exposing (..)
import Data.Foo exposing (..)
import Date exposing (..)
import Uuid exposing (..)


jsonstringGet : RequestBuilder String
jsonstringGet  =
  HttpBuilder.get (Request.Url.Responses.jsonstringGet )
    |> HttpBuilder.withExpectJson Decode.string
    |> HttpBuilder.withTimeout 30000


jsonintGet : RequestBuilder Int
jsonintGet  =
  HttpBuilder.get (Request.Url.Responses.jsonintGet )
    |> HttpBuilder.withExpectJson Decode.int
    |> HttpBuilder.withTimeout 30000


jsonlongGet : RequestBuilder Int
jsonlongGet  =
  HttpBuilder.get (Request.Url.Responses.jsonlongGet )
    |> HttpBuilder.withExpectJson Decode.int
    |> HttpBuilder.withTimeout 30000


jsonfloatGet : RequestBuilder Float
jsonfloatGet  =
  HttpBuilder.get (Request.Url.Responses.jsonfloatGet )
    |> HttpBuilder.withExpectJson Decode.float
    |> HttpBuilder.withTimeout 30000


jsondoubleGet : RequestBuilder Float
jsondoubleGet  =
  HttpBuilder.get (Request.Url.Responses.jsondoubleGet )
    |> HttpBuilder.withExpectJson Decode.float
    |> HttpBuilder.withTimeout 30000


jsonbooleanGet : RequestBuilder Bool
jsonbooleanGet  =
  HttpBuilder.get (Request.Url.Responses.jsonbooleanGet )
    |> HttpBuilder.withExpectJson Decode.bool
    |> HttpBuilder.withTimeout 30000


jsonuuidGet : RequestBuilder Uuid
jsonuuidGet  =
  HttpBuilder.get (Request.Url.Responses.jsonuuidGet )
    |> HttpBuilder.withExpectJson Uuid.decoder
    |> HttpBuilder.withTimeout 30000


jsondateGet : RequestBuilder Date
jsondateGet  =
  HttpBuilder.get (Request.Url.Responses.jsondateGet )
    |> HttpBuilder.withExpectJson (Decode.string |> Decode.andThen (Date.fromIsoString >> Result.map Decode.succeed >> Result.withDefault (Decode.fail "can't parse the date!")))
    |> HttpBuilder.withTimeout 30000


jsoncaseclassGet : RequestBuilder Foo
jsoncaseclassGet  =
  HttpBuilder.get (Request.Url.Responses.jsoncaseclassGet )
    |> HttpBuilder.withExpectJson Data.Foo.decoder
    |> HttpBuilder.withTimeout 30000


jsoncoproductGet : RequestBuilder Coproduct
jsoncoproductGet  =
  HttpBuilder.get (Request.Url.Responses.jsoncoproductGet )
    |> HttpBuilder.withExpectJson Data.Coproduct.decoder
    |> HttpBuilder.withTimeout 30000


jsonlistGet : RequestBuilder (List String)
jsonlistGet  =
  HttpBuilder.get (Request.Url.Responses.jsonlistGet )
    |> HttpBuilder.withExpectJson (Decode.list Decode.string)
    |> HttpBuilder.withTimeout 30000


jsonmapGet : RequestBuilder (Dict String Foo)
jsonmapGet  =
  HttpBuilder.get (Request.Url.Responses.jsonmapGet )
    |> HttpBuilder.withExpectJson (Decode.dict Data.Foo.decoder)
    |> HttpBuilder.withTimeout 30000

