{-
  This file was generated by endpoints-elm interpreter.
  Do not edit this file manually.

  See https://github.com/scalalandio/endpoints-elm for more information.
-}

module Data.io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID exposing (..)

import Random exposing (..)
import Uuid exposing (..)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


type alias io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID = 
  { value : Uuid
  , msg : String
  }

init : io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID
init = 
  { value = Tuple.first <| step Uuid.uuidGenerator (initialSeed 0)
  , msg = ""
  }

decoder : Decoder io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID
decoder = Decode.succeed io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID
  |> required "value" Uuid.decoder 
  |> required "msg" Decode.string 

encoder : io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID -> Encode.Value
encoder model = Encode.object (fieldsEncoder model)

encoderTagged : (String, String) -> io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID -> Encode.Value
encoderTagged (discriminator, tag) model = Encode.object ((discriminator, Encode.string tag) :: fieldsEncoder model)

fieldsEncoder : io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID -> List (String, Encode.Value)
fieldsEncoder model = 
  [ ( "value", Uuid.encode model.value )
  , ( "msg", Encode.string model.msg )
  ]

setValue : Uuid -> io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID -> io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID
setValue newValue io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID =
  { io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID | value = newValue }
setMsg : String -> io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID -> io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID
setMsg newMsg io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID =
  { io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID | msg = newMsg }

updateValue : (Uuid -> Uuid) -> io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID -> io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID
updateValue f io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID =
  { io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID | value = f io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID.value }
updateMsg : (String -> String) -> io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID -> io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID
updateMsg f io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID =
  { io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID | msg = f io.scalaland.endpoints.elm.BasicTypeTest.Domain.TimeOrID.ID.msg }